@page
@model CourseSchedulingSystem.Pages.Manage.Instructors.CreateModel

@{
    ViewData["Title"] = "Create Instructor";
}

<h1>Create</h1>

<h4>Instructor</h4>
<hr/>
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Instructor.FirstName" class="control-label"></label>
                <input asp-for="Instructor.FirstName" class="form-control"/>
                <span asp-validation-for="Instructor.FirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Instructor.Middle" class="control-label"></label>
                <input asp-for="Instructor.Middle" class="form-control"/>
                <span asp-validation-for="Instructor.Middle" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Instructor.LastName" class="control-label"></label>
                <input asp-for="Instructor.LastName" class="form-control"/>
                <span asp-validation-for="Instructor.LastName" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Instructor.IsActive" checked="@(Model.Instructor?.IsActive ?? true ? "" : null)" /> @Html.DisplayNameFor(model => model.Instructor.IsActive)
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary"/>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="Index">Back to List</a>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}